---
import Layout from "@layouts/Layout.astro";
import Container from "@layouts/Container.astro";
import { getCollection, getEntry } from "astro:content";

const schauraeume = await getCollection("schauraum");
const schauraum = await getEntry("pages", "schauraum");
import type { CollectionEntry } from "astro:content";

interface SeasonGroup {
  [season: string]: CollectionEntry<"schauraum">[];
}
//group schauraeume data by season
const season: SeasonGroup = schauraeume.reduce((acc, item) => {
  const key = item.data.season;
  if (!acc[key]) {
    acc[key] = [];
  }
  acc[key].push(item);
  return acc;
}, {} as SeasonGroup);

//sort seasons by episode Number
Object.keys(season).forEach((key) => {
  // @ts-ignore
  season[key].sort((a, b) => a.data.episode - b.data.episode);
});

const { Content, headings } = await schauraum.render();
const { title, description, color } = schauraum.data;
---

<Layout {title} {description} {color}>
  <div
    class="flex flex-col items-center justify-center text-yellow prose-headings:text-purple prose-a:text-purple"
  >
    <Container>
      <ul class="p-0 m-0 inline">
        {
          season["1"].map((schauraum, i) => (
            <a href={"/schauraum/" + schauraum.slug} class="no-underline ">
              <li class="font-sans inline text-3xl leading-none md:leading-none  md:text-5xl font-bold list-none">
                S{schauraum.data.season}E{schauraum.data.episode}{" "}
              </li>
            </a>
          ))
        }
      </ul>
      <br class="text-purple" />
      <br />
      <Content />
    </Container>
  </div>
</Layout>
